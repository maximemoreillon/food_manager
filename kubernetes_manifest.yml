# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: ${APPLICATION_NAME}
# spec:
#   storageClassName: manual
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 50Gi
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APPLICATION_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APPLICATION_NAME}
  template:
    metadata:
      labels:
        app: ${APPLICATION_NAME}
    spec:
      containers:
        - name: ${APPLICATION_NAME}
          image: ${CONTAINER_IMAGE_TAGGED}
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: environment-variables
            - secretRef:
                name: auth0-env
          env:
            - name: S3_BUCKET
              value: food-manager
      #     volumeMounts:
      #       - mountPath: /usr/src/app/uploads
      #         name: ${APPLICATION_NAME}
      # volumes:
      #   - name: ${APPLICATION_NAME}
      #     persistentVolumeClaim:
      #       claimName: ${APPLICATION_NAME}
---
apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_NAME}
spec:
  # type: ClusterIP
  type: NodePort
  selector:
    app: ${APPLICATION_NAME}
  ports:
    - port: 80
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ${APPLICATION_NAME}
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt
#     nginx.ingress.kubernetes.io/proxy-body-size: 5g
#     nginx/client_max_body_size: 5g
# spec:
#   tls:
#     - hosts:
#         - ${K8S_INGRESS_HOST}
#       secretName: ${APPLICATION_NAME}
#   rules:
#     - host: ${K8S_INGRESS_HOST}
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: ${APPLICATION_NAME}
#                 port:
#                   number: 80
